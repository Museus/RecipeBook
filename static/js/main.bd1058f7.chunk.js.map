{"version":3,"sources":["components/search-specific.js","components/search-suggestion.js","components/drink-tile.js","components/drink-display.js","App.js","serviceWorker.js","index.js"],"names":["SearchSpecific","props","react_default","a","createElement","id","className","TextField","label","onChange","updateName","variant","Button","onClick","searchFunction","value","margin","color","SearchSuggestion","react_select_esm","isMulti","options","ingrOptions","updateInclude","updateExclude","DrinkTile","Paper","Typography","drinkInfo","name","category","varient","ingredients","map","ingr","amount","unit","ingredient","DrinkDisplay","Fragment","drinkResults","drink","index","drink_tile","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","parseParams","params","keys","forEach","key","console","log","handleNameChange","event","setState","specificSearchName","target","handleInclIngr","selectedOption","ingrInclude","handleExclIngr","ingrExclude","state","bind","assertThisInitialized","handleSearchSpecific","handleSearchSuggestion","axios","require","qs","_this2","get","then","response","data","this_ref","drinkList","i","length","push","catch","error","paramsSerializer","search_specific","search_suggestion","drink_display","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd1058f7.chunk.js","sourcesContent":["import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nfunction SearchSpecific(props) {\n\treturn (\n\t\t<div id=\"specific-search\">\n\t\t\t<h3>Looking for something specific?</h3>\n\t\t\t<div className=\"specific-form\">\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"specific-search-input\"\n\t\t\t\t\tlabel=\"Drink Name\"\n\t\t\t\t\tonChange={props.updateName}\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t/>\n\n\t\t\t\t<Button\t\n\t\t\t\t\tid=\"specific-search-button\"\n\t\t\t\t\tonClick={props.searchFunction}\n\t\t\t\t\tvalue=\"Search\"\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t>\n\t\t\t\tSearch by Name\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default SearchSpecific;\n\n","import React from 'react';\nimport Select from 'react-select';\nimport Button from '@material-ui/core/Button';\n\n\nfunction SearchSuggestion(props) {\n\n\treturn (\n\t\t<div id=\"filter-search\">\n\t\t\t<h3>Need a suggestion?</h3>\n\t\t\t<div className=\"flex-container\">\n\t\t\t\t<div id=\"ingredients-include\" className=\"ingredients-list\">\n\t\t\t\t\t<h4>Which ingredients should we include?</h4>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tisMulti\n\t\t\t\t\t\tclassName=\"multiselect-ingredients\"\n\t\t\t\t\t\toptions={props.ingrOptions}\n\t\t\t\t\t\tonChange={props.updateInclude}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"ingredients-avoid\" className=\"ingredients-list\">\n\t\t\t\t\t<h4>Which ingredients should we avoid?</h4>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tisMulti\n\t\t\t\t\t\tclassName=\"multiselect-ingredients\"\n\t\t\t\t\t\toptions={props.ingrOptions}\n\t\t\t\t\t\tonChange={props.updateExclude}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<Button \n\t\t\t\tid=\"suggestion-button\"\n\t\t\t\tmargin=\"normal\"\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tonClick={props.searchFunction}\n\t\t\t>\n\t\t\tSearch by Ingredients\n\t\t\t</Button>\n\t\t</div>\n\t);\n}\n\nexport default SearchSuggestion;\n","import React from 'react';\n\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nfunction DrinkTile(props) {\n\n\treturn(\n\t\t<Paper className=\"drink-tile\">\n\t\t\t<Typography variant=\"h6\">\n\t\t\t\t{props.drinkInfo.name}\n\t\t\t</Typography>\n\n\t\t\t<Typography variant=\"subtitle2\">\n\t\t\t\t{props.drinkInfo.category}\n\t\t\t</Typography>\n\n\t\t\t<Typography varient=\"subtitle2\">\n\t\t\t{props.drinkInfo.ingredients.map(ingr => {\n\t\t\t\treturn (ingr.amount + \" \" + ingr.unit + \" \" + ingr.ingredient + \" \")\n\t\t\t})}\n\t\t\t</Typography>\n\t\t</Paper>\n\t);\n}\n\nexport default DrinkTile;\n\t\t\t\t\n\n","import React from 'react';\n\nimport DrinkTile from './drink-tile.js';\n\n\nfunction DrinkDisplay(props) {\n\n\treturn(\n\t\t<>\n\t\t{\n\t\t\tprops.drinkResults.map((drink, index) => {\n\t\t\t\treturn <DrinkTile drinkInfo={drink} className=\"drink-tile\" />\n\t\t\t})\n\t\t}\n\t\t</>\n\t);\n}\n\nexport default DrinkDisplay;\n","import React, { Component } from 'react';\n\n/* Import components */\nimport SearchSpecific from './components/search-specific.js';\nimport SearchSuggestion from './components/search-suggestion.js';\nimport DrinkDisplay from './components/drink-display.js';\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tspecificSearchName: '',\n\t\t\tingrInclude: [],\n\t\t\tingrExclude: [],\n\t\t\tingrOptions: [],\n\t\t\tdrinkResults: []\n\t\t};\n\t\t\n\t\tthis.handleNameChange = this.handleNameChange.bind(this);\n\t\tthis.handleSearchSpecific = this.handleSearchSpecific.bind(this);\n\t\tthis.handleSearchSuggestion = this.handleSearchSuggestion.bind(this);\n\t\tthis.handleInclIngr = this.handleInclIngr.bind(this);\n\t\tthis.handleExclIngr = this.handleExclIngr.bind(this);\n\t\tthis.parseParams = this.parseParams.bind(this);\n\t\tthis.axios = require('axios');\n\t\tthis.qs = require('qs');\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.axios.get('https://drinkdb-api.herokuapp.com/ingredients')\n\t\t.then(response => {\n\t\t\tthis.setState({ingrOptions: response.data});\n\t\t});\n\t}\n\n\thandleSearchSpecific() {\n\t\tconst this_ref = this;\n\t\tthis.axios.get('https://drinkdb-api.herokuapp.com/drink', {\n\t\t\tparams: {\n\t\t\t\t'name': this.state.specificSearchName\n\t\t\t}\n\t\t}).then(response => {\n\t\t\tvar drinkList = [];\n\n\t\t\tfor(var i=0; i < response.data.length; i++)\n\t\t\t\tdrinkList.push(response.data[i]);\n\n\t\t\tthis_ref.setState({ drinkResults: drinkList });\n\t\t}).catch(error => {\n\t\t\tconsole.log(\"Error: \" + error);\n\t\t});\n\t}\n\n\thandleSearchSuggestion() {\n\t\tconst this_ref = this;\n\n\t\tthis.axios.get('https://drinkdb-api.herokuapp.com/suggestion', {\n\t\t\tparams: {\n\t\t\t\t'ingrInclude': this_ref.state.ingrInclude,\n\t\t\t\t'ingrExclude': this_ref.state.ingrExclude\n\t\t\t},\n\t\t\tparamsSerializer: params => {\n\t\t\t\treturn this_ref.parseParams(params)\n\t\t\t}\n\t\t}).then(response => {\n\t\t\tvar drinkList = [];\n\n\t\t\tfor(var i=0; i < response.data.length; i++)\n\t\t\t\tdrinkList.push(response.data[i]);\n\n\t\t\tthis_ref.setState({ drinkResults: drinkList });\n\t\t}).catch(error => {\n\t\t\tconsole.log(\"Error: \" + error);\n\t\t});\n\t}\n\n\tparseParams = (params) => {\n\t\tlet options = '';\n\t\t\n\t\tconst keys = Object.keys(params);\n\t\tkeys.forEach(key => {\n\t\t\tparams[key].forEach(ingr => {\n\t\t\t\toptions += key + '=' + ingr.value + '&';\n\t\t\t});\n\t\t});\n\n\t\tconsole.log(options);\n\t\treturn options;\n\t};\n\n\thandleNameChange = (event) => {\n\t\tthis.setState({\n\t\t\tspecificSearchName: event.target.value\n\t\t});\n\t}\n\n\thandleInclIngr = (selectedOption) => {\n\t\tthis.setState({\n\t\t\tingrInclude: selectedOption\n\t\t});\n\t}\n\n\thandleExclIngr = (selectedOption) => {\n\t\tthis.setState({\n\t\t\tingrExclude: selectedOption\n\t\t});\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"center-container\">\n\t\t\t\t<SearchSpecific \n\t\t\t\t\tupdateName={this.handleNameChange}\n\t\t\t\t\tsearchFunction={this.handleSearchSpecific}\n\t\t\t\t/>\n\t\t\t\t<SearchSuggestion \n\t\t\t\t\tupdateInclude={this.handleInclIngr}\n\t\t\t\t\tupdateExclude={this.handleExclIngr}\n\t\t\t\t\tsearchFunction={this.handleSearchSuggestion}\n\t\t\t\t\tingrOptions={this.state.ingrOptions}\n\t\t\t\t/>\n\t\t\t\t{\n\t\t\t\tthis.state.drinkResults.length !== 0 &&\n\t\t\t\t<DrinkDisplay drinkResults={this.state.drinkResults} />\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App ;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('drink-app'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}